{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x959c6a9Ad7dc622e86A1Dc564576E12686883C1d",
    "txHash": "0x67b87ed42f09a6a02863784d4fb354baa6c9147bc8cd2097a28e48aaee48a41e"
  },
  "proxies": [
    {
      "address": "0x4182C05f51214938F758DfAbE485Ac4718eaa3a1",
      "txHash": "0xf1c9e09d6cd513aa1bcf17679c6c95471671733decc1e9f10116c1708c6424d4",
      "kind": "transparent"
    },
    {
      "address": "0xb45ae5A41645904D2Ced440F9a49Eb2330423FdC",
      "txHash": "0x48e0af9b47cb42c2a3448afe622d767bbe827688ce98acfe2d43d43a3480a24e",
      "kind": "transparent"
    },
    {
      "address": "0x1BcfFdbc19e672820593370e27cad122DC50b6fC",
      "txHash": "0xc8c383a11080f013686029a36a16a07bf83fa88bd7997576e1fa3934438f0da1",
      "kind": "transparent"
    },
    {
      "address": "0x1C5dABa6Cd8eb4f1888E5278544A796a46a8765a",
      "txHash": "0xf56845014af10071cbb6bf60de6253d2d9328f1ed7236d84ec221b12e7c44d14",
      "kind": "transparent"
    },
    {
      "address": "0x8Ea6B82800167F923d5e067C37F095ACEbE838A1",
      "txHash": "0x0e8c342b9dfaa838b340d0d89d6b0bb338b08a0875895be7859629e6208bfe6b",
      "kind": "transparent"
    },
    {
      "address": "0xeF2781091aB0DA15fB803AE08f3c9d85cdfDABdE",
      "txHash": "0xc57b184cf6435041d1fc6a9fd245d716b3495d442c0f8bc0d25f6fd943ad15db",
      "kind": "transparent"
    },
    {
      "address": "0x365C41549FC0e606C3A0bF1173c7Abf69d566E79",
      "txHash": "0xa4c17506dbd6cecfc552cdbdbdd5d3426b195aaf78b7efa01668dc6a856a1bec",
      "kind": "transparent"
    },
    {
      "address": "0xD2A7946b046e34F6e6F1dc4b262F98879a500eAF",
      "txHash": "0x64e26c0e0a8152c350c31cafd6f8c0d38102c3f0c0ea55a892dc47686aea20ef",
      "kind": "transparent"
    },
    {
      "address": "0xf93749a44d1C87dE9e61b0A9Ad8371820721Efe7",
      "txHash": "0x5c9b87d0954df444e34dab34556df02d91130ced121b694b029706bf91191fa8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9b1b200323f755fffd919a772d6ed29206322f8025f723ff4173dac622db3258": {
      "address": "0x81C45FC0334778f82691aE89b4bfD90e3772F3Fc",
      "txHash": "0x749e6bcda56f5cec2aeb584d544a10a59a20b84b7ddd6ede5f12471cf64253d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "priceSet",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\BasicPriceOracle.sol:15"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "currentPrice_",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\BasicPriceOracle.sol:16"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "163a0128c29f69ed83e11d4215fc6141c67ca9c10e2e2d2122e5a19cbfe6ba69": {
      "address": "0x6595FC7A412c3bff0338e3EEfbf76C6325c01C63",
      "txHash": "0x1e1ef6b94810ee60510022637a6787f358c53c811e5db8cad8fd6f4dd386961a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "Avatars",
            "label": "avatars",
            "type": "t_array(t_struct(Avatar)6532_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Avatars.sol:44"
          },
          {
            "contract": "Avatars",
            "label": "maxLevel",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Avatars.sol:46"
          },
          {
            "contract": "Avatars",
            "label": "maxEquipmentSlot",
            "type": "t_uint16",
            "src": "..\\project:\\contracts\\Avatars.sol:47"
          },
          {
            "contract": "Avatars",
            "label": "keyHash",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Avatars.sol:48"
          },
          {
            "contract": "Avatars",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\Avatars.sol:51"
          },
          {
            "contract": "Avatars",
            "label": "attributes",
            "type": "t_mapping(t_uint256,t_mapping(t_uint16,t_uint256))",
            "src": "..\\project:\\contracts\\Avatars.sol:61"
          },
          {
            "contract": "Avatars",
            "label": "equipments",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\Avatars.sol:75"
          }
        ],
        "types": {
          "t_array(t_struct(Avatar)6532_storage)dyn_storage": {
            "label": "struct Avatars.Avatar[]"
          },
          "t_struct(Avatar)6532_storage": {
            "label": "struct Avatars.Avatar",
            "members": [
              {
                "label": "avatarId",
                "type": "t_uint256"
              },
              {
                "label": "rarity",
                "type": "t_uint8"
              },
              {
                "label": "gender",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint16"
              },
              {
                "label": "exp",
                "type": "t_uint256"
              },
              {
                "label": "genes",
                "type": "t_struct(AvatarGenes)6545_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "minter",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AvatarGenes)6545_storage": {
            "label": "struct Avatars.AvatarGenes",
            "members": [
              {
                "label": "bodyShape",
                "type": "t_uint8"
              },
              {
                "label": "faceShape",
                "type": "t_uint8"
              },
              {
                "label": "hairType",
                "type": "t_uint8"
              },
              {
                "label": "hairColor",
                "type": "t_uint8"
              },
              {
                "label": "eyeColor",
                "type": "t_uint8"
              },
              {
                "label": "skinColor",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint16 => uint256))"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f134e6eec5cda99ee91db2acdaaa7bc21d5bd4cb36cabd7bb3872d1ad8296705": {
      "address": "0x737b13a05668d1018Ddead9Bbf584710Bce8b5b3",
      "txHash": "0xf9020b27f39d356495737daf7ea783f7a47acf0cf0a733d866a26799b9825434",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "Skills",
            "label": "skills",
            "type": "t_array(t_struct(Skill)9740_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Skills.sol:27"
          },
          {
            "contract": "Skills",
            "label": "keyHash",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Skills.sol:29"
          },
          {
            "contract": "Skills",
            "label": "requirements",
            "type": "t_mapping(t_uint256,t_mapping(t_uint16,t_uint256))",
            "src": "..\\project:\\contracts\\Skills.sol:32"
          },
          {
            "contract": "Skills",
            "label": "avatarSkills",
            "type": "t_mapping(t_uint256,t_array(t_struct(Skill)9740_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\Skills.sol:33"
          }
        ],
        "types": {
          "t_array(t_struct(Skill)9740_storage)dyn_storage": {
            "label": "struct Skills.Skill[]"
          },
          "t_struct(Skill)9740_storage": {
            "label": "struct Skills.Skill",
            "members": [
              {
                "label": "skillId",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "flag",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint16 => uint256))"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_array(t_struct(Skill)9740_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Skills.Skill[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "84aad129910df8a479af592077fdffd1155d610e989a012565e500c0440854b5": {
      "address": "0x21FF0eDedBb2F2fb1A7Ec97934A70577Aea2b5ac",
      "txHash": "0x70dad7695da46b93176911462e7955e90dcdc284f5bc96c6684130002b991516",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "Events",
            "label": "events",
            "type": "t_array(t_struct(Event)9393_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Events.sol:35"
          },
          {
            "contract": "Events",
            "label": "keyHash",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Events.sol:37"
          },
          {
            "contract": "Events",
            "label": "eventStatus",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\project:\\contracts\\Events.sol:40"
          },
          {
            "contract": "Events",
            "label": "eventRewardItems",
            "type": "t_mapping(t_uint256,t_array(t_struct(RewardItem)9398_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\Events.sol:41"
          }
        ],
        "types": {
          "t_array(t_struct(Event)9393_storage)dyn_storage": {
            "label": "struct Events.Event[]"
          },
          "t_struct(Event)9393_storage": {
            "label": "struct Events.Event",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256"
              },
              {
                "label": "eventMode",
                "type": "t_uint8"
              },
              {
                "label": "eventType",
                "type": "t_uint8"
              },
              {
                "label": "rewardCor",
                "type": "t_uint256"
              },
              {
                "label": "rewardExp",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint256,t_array(t_struct(RewardItem)9398_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Events.RewardItem[])"
          },
          "t_array(t_struct(RewardItem)9398_storage)dyn_storage": {
            "label": "struct Events.RewardItem[]"
          },
          "t_struct(RewardItem)9398_storage": {
            "label": "struct Events.RewardItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "quantity",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c00b7f277a1a01ff75197a010a22b6bd45d8e7e30100d45617400f2719dd57d4": {
      "address": "0x7a3667a7AbFA8D0057DDD98d39A893b04Ba03cE9",
      "txHash": "0xb2258f2ed1bfa4cb3eddc4d2ddd4af258de5d65b995b583c084821a1fed49f51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "Cardinal",
            "label": "adventures",
            "type": "t_array(t_struct(Adventure)7604_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Cardinal.sol:43"
          },
          {
            "contract": "Cardinal",
            "label": "corToken",
            "type": "t_contract(IERC20)3116",
            "src": "..\\project:\\contracts\\Cardinal.sol:44"
          },
          {
            "contract": "Cardinal",
            "label": "priceOracle",
            "type": "t_contract(IPriceOracle)10314",
            "src": "..\\project:\\contracts\\Cardinal.sol:45"
          },
          {
            "contract": "Cardinal",
            "label": "avatars",
            "type": "t_contract(Avatars)7465",
            "src": "..\\project:\\contracts\\Cardinal.sol:47"
          },
          {
            "contract": "Cardinal",
            "label": "skills",
            "type": "t_contract(Skills)10013",
            "src": "..\\project:\\contracts\\Cardinal.sol:48"
          },
          {
            "contract": "Cardinal",
            "label": "events",
            "type": "t_contract(Events)9577",
            "src": "..\\project:\\contracts\\Cardinal.sol:49"
          },
          {
            "contract": "Cardinal",
            "label": "keyHash",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Cardinal.sol:51"
          },
          {
            "contract": "Cardinal",
            "label": "mintAvatarFee",
            "type": "t_int128",
            "src": "..\\project:\\contracts\\Cardinal.sol:53"
          },
          {
            "contract": "Cardinal",
            "label": "maxOwnedAvatar",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Cardinal.sol:54"
          },
          {
            "contract": "Cardinal",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Cardinal.sol:57"
          },
          {
            "contract": "Cardinal",
            "label": "freeClaims",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\project:\\contracts\\Cardinal.sol:58"
          },
          {
            "contract": "Cardinal",
            "label": "gameVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\Cardinal.sol:60"
          },
          {
            "contract": "Cardinal",
            "label": "parties",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\Cardinal.sol:61"
          },
          {
            "contract": "Cardinal",
            "label": "guilds",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\Cardinal.sol:62"
          },
          {
            "contract": "Cardinal",
            "label": "avatarCooldowns",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\project:\\contracts\\Cardinal.sol:63"
          },
          {
            "contract": "Cardinal",
            "label": "attributePoints",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\Cardinal.sol:64"
          },
          {
            "contract": "Cardinal",
            "label": "adventureEvents",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\Cardinal.sol:65"
          },
          {
            "contract": "Cardinal",
            "label": "avatarAdvId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\Cardinal.sol:66"
          }
        ],
        "types": {
          "t_array(t_struct(Adventure)7604_storage)dyn_storage": {
            "label": "struct Cardinal.Adventure[]"
          },
          "t_struct(Adventure)7604_storage": {
            "label": "struct Cardinal.Adventure",
            "members": [
              {
                "label": "advId",
                "type": "t_uint256"
              },
              {
                "label": "avatarId",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint64"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IERC20)3116": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)10314": {
            "label": "contract IPriceOracle"
          },
          "t_contract(Avatars)7465": {
            "label": "contract Avatars"
          },
          "t_contract(Skills)10013": {
            "label": "contract Skills"
          },
          "t_contract(Events)9577": {
            "label": "contract Events"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
